version: "3.8"

networks:
  edge: {}
  internal: {}

volumes:
  traefik_letsencrypt:

services:
  traefik:
    image: traefik:v3.1
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.le.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    networks: [edge]
    restart: unless-stopped

  togglehub-api:
    image: ${IMAGE_API}
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=${SQLSERVER_CONNECTION}
      - ApplicationUrls__ClientBaseUrl=${CLIENT_BASE_URL}
      - ApplicationUrls__ApiBaseUrl=${API_BASE_URL}
      - Mail__Provider=${MAIL_PROVIDER}
      - SendGrid__ApiKey=${SENDGRID_API_KEY}
      - SendGrid__FromEmail=${SENDGRID_FROM_EMAIL}
      - SendGrid__FromName=${SENDGRID_FROM_NAME}
      - OpenTelemetry__Enabled=${OTEL_ENABLED}
      - OpenTelemetry__ServiceName=${OTEL_SERVICE_NAME}
      - OpenTelemetry__ServiceVersion=${OTEL_SERVICE_VERSION}
      - OpenTelemetry__OtlpLogsEnabled=${OTEL_OTLP_LOGS_ENABLED}
      - OpenTelemetry__OtlpEndpointLogs=${OTEL_OTLP_ENDPOINT_LOGS}
      - OpenTelemetry__OtlpTracesEnabled=${OTEL_OTLP_TRACES_ENABLED}
      - OpenTelemetry__OtlpEndpointTraces=${OTEL_OTLP_ENDPOINT_TRACES}
      - OpenTelemetry__OtlpMetricsEnabled=${OTEL_OTLP_METRICS_ENABLED}
      - OpenTelemetry__OtlpEndpointMetrics=${OTEL_OTLP_ENDPOINT_METRICS}
      - OpenTelemetry__OtlpProtocol=${OTEL_OTLP_PROTOCOL}
    labels:
      - traefik.enable=true
      - traefik.docker.network=edge
      - traefik.http.routers.api.rule=Host(`api.${ROOT_DOMAIN}`)
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls.certresolver=le
      - traefik.http.services.api.loadbalancer.server.port=8080
    networks: [internal, edge]
    restart: unless-stopped

  togglehub-frontend:
    image: ${IMAGE_WEB}
    labels:
      - traefik.enable=true
      - traefik.docker.network=edge
      # HTTPS router on apex
      - traefik.http.routers.site.rule=Host(`${ROOT_DOMAIN}`)
      - traefik.http.routers.site.entrypoints=websecure
      - traefik.http.routers.site.tls.certresolver=le
      - traefik.http.services.site.loadbalancer.server.port=80
      
      # HTTP -> HTTPS (apex)
      - traefik.http.routers.site-redirect.rule=Host(`${ROOT_DOMAIN}`)
      - traefik.http.routers.site-redirect.entrypoints=web
      - traefik.http.routers.site-redirect.middlewares=redirect-to-https
      
      # www -> apex
      - traefik.http.routers.www-redirect.rule=Host(`www.${ROOT_DOMAIN}`)
      - traefik.http.routers.www-redirect.entrypoints=web,websecure
      - traefik.http.routers.www-redirect.tls=true
      - traefik.http.routers.www-redirect.middlewares=redirect-to-apex
        
      # Middlewares
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.redirect-to-apex.redirectregex.regex=^https?://(?:www|app)\.(.+)/(.*)?
      - traefik.http.middlewares.redirect-to-apex.redirectregex.replacement=https://$1/$2
      - traefik.http.middlewares.redirect-to-apex.redirectregex.permanent=true
    networks: [internal, edge]
    restart: unless-stopped
    
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    environment:
      - GRAFANA_CLOUD_OTLP_ENDPOINT=${GRAFANA_CLOUD_OTLP_ENDPOINT}
      - GRAFANA_CLOUD_INSTANCE_ID=${GRAFANA_CLOUD_INSTANCE_ID}
      - GRAFANA_CLOUD_API_KEY=${GRAFANA_CLOUD_API_KEY}
    volumes:
      - /opt/togglehub/otel-config.prod.yaml:/etc/otelcol-contrib/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "4317"   # OTLP/gRPC (optional to expose)
      - "4318"   # OTLP/HTTP (optional to expose)
    networks: [internal]
    restart: unless-stopped

  
