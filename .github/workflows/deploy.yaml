name: Build & Deploy

on:
  workflow_run:
    workflows: ["test"] 
    types: [completed]
    branches: [master]
    
env:
  REG_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  SHA: ${{ github.sha }}

jobs:
  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & Push WEB (amd64 with cache)
        uses: docker/build-push-action@v6
        with:
          context: ./src/ToggleHub.Web.React
          platforms: linux/amd64
          push: true
          build-args: |
            VITE_API_URL=${{ secrets.API_URL }}
          tags: |
            ${{ env.REG_USER }}/togglehub-web:${{ env.SHA }}
            ${{ env.REG_USER }}/togglehub-web:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
  build-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & Push API (amd64 with cache)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: src/ToggleHub.API/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REG_USER }}/togglehub-api:${{ env.SHA }}
            ${{ env.REG_USER }}/togglehub-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
          
  deploy:
    needs: [build-web, build-api]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
            
      - name: Copy compose & otel config
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.prod.yaml,otel-config.prod.yaml"
          target: "/opt/togglehub"


      # create/update .env.prod on server from secrets
      - name: Write .env.prod on server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            mkdir -p /opt/togglehub
            cat > /opt/togglehub/.env.prod <<'EOF'
            ROOT_DOMAIN=${{ secrets.ROOT_DOMAIN }}
            LETSENCRYPT_EMAIL=${{ secrets.LETSENCRYPT_EMAIL }}
            
            IMAGE_API=${{ secrets.DOCKERHUB_USERNAME }}/togglehub-api:${{ github.sha }}
            IMAGE_WEB=${{ secrets.DOCKERHUB_USERNAME }}/togglehub-web:${{ github.sha }}
            
            ASPNETCORE_ENVIRONMENT=Production
            CLIENT_BASE_URL=https://${{ secrets.ROOT_DOMAIN }}
            API_BASE_URL=${{ secrets.API_URL }}
            
            SQLSERVER_CONNECTION=${{ secrets.SQL_CONNECTION }}
            
            MAIL_PROVIDER=SendGrid
            SENDGRID_FROM_EMAIL=${{ secrets.SENDGRID_FROM_EMAIL }}
            SENDGRID_FROM_NAME=${{ secrets.SENDGRID_FROM_NAME }}
            SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}
            
            OTEL_ENABLED=${{ secrets.OTEL_ENABLED }}
            OTEL_SERVICE_NAME=${{ secrets.OTEL_SERVICE_NAME }}
            OTEL_SERVICE_VERSION=${{ secrets.OTEL_SERVICE_VERSION }}
            OTEL_OTLP_LOGS_ENABLED=${{ secrets.OTEL_OTLP_LOGS_ENABLED }}
            OTEL_OTLP_ENDPOINT_LOGS=${{ secrets.OTEL_OTLP_ENDPOINT_LOGS }}
            OTEL_OTLP_TRACES_ENABLED=${{ secrets.OTEL_OTLP_TRACES_ENABLED }}
            OTEL_OTLP_ENDPOINT_TRACES=${{ secrets.OTEL_OTLP_ENDPOINT_TRACES }}
            OTEL_OTLP_METRICS_ENABLED=${{ secrets.OTEL_OTLP_METRICS_ENABLED }}
            OTEL_OTLP_ENDPOINT_METRICS=${{ secrets.OTEL_OTLP_ENDPOINT_METRICS }}
            OTEL_OTLP_PROTOCOL=${{ secrets.OTEL_OTLP_PROTOCOL }}
            
            GRAFANA_CLOUD_OTLP_ENDPOINT=${{ secrets.GRAFANA_CLOUD_OTLP_ENDPOINT }}
            GRAFANA_CLOUD_INSTANCE_ID=${{ secrets.GRAFANA_CLOUD_INSTANCE_ID }}
            GRAFANA_CLOUD_API_KEY=${{ secrets.GRAFANA_CLOUD_API_KEY }}
            EOF

      # deploy
      - name: Deploy compose
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd /opt/togglehub
            docker compose -f docker-compose.prod.yaml --env-file .env.prod pull
            docker compose -f docker-compose.prod.yaml --env-file .env.prod up -d
            docker image prune -f
